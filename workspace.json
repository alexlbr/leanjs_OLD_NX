{
  "version": 1,
  "projects": {
    "leanjs.com": {
      "root": "apps/leanjs.com",
      "sourceRoot": "apps/leanjs.com/src",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "deploy": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "dist/leanjs.com",
            "parallel": false,
            "commands": [
              "cp ../../apps/leanjs.com/firebase.json .",
              "npx firebase deploy --project=leanjscom-web --only hosting --token=$FIREBASE_CI_TOKEN"
            ]
          }
        },
        "build": {
          "builder": "@nrwl/gatsby:build",
          "options": {
            "uglify": true,
            "color": true,
            "profile": false,
            "maxWorkers": 2,
            "memoryLimit": 3584
          },
          "configurations": {
            "production": {}
          }
        },
        "serve": {
          "builder": "@nrwl/gatsby:server",
          "options": {
            "buildTarget": "leanjs.com:build",
            "port": 4200
          },
          "configurations": {
            "production": {
              "buildTarget": "leanjs.com:build:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/leanjs.com/tsconfig.json",
              "apps/leanjs.com/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/leanjs.com/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/leanjs.com/jest.config.js",
            "tsConfig": "apps/leanjs.com/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "leanjs.com-e2e": {
      "root": "apps/leanjs.com-e2e",
      "sourceRoot": "apps/leanjs.com-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/leanjs.com-e2e/cypress.json",
            "tsConfig": "apps/leanjs.com-e2e/tsconfig.e2e.json",
            "devServerTarget": "leanjs.com:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "leanjs.com:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": ["apps/leanjs.com-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/leanjs.com-e2e/**/*"]
          }
        }
      }
    },
    "ui-core": {
      "root": "packages/ui-core",
      "sourceRoot": "packages/ui-core/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/web:package",
          "options": {
            "outputPath": "dist/packages/ui-core",
            "tsConfig": "packages/ui-core/tsconfig.lib.json",
            "project": "packages/ui-core/package.json",
            "entryFile": "packages/ui-core/src/index.ts",
            "external": ["react", "react-dom", "react-is", "styled-components"],
            "babelConfig": "@nrwl/react/plugins/bundle-babel",
            "rollupConfig": "@nrwl/react/plugins/bundle-rollup",
            "assets": [
              {
                "glob": "README.md",
                "input": ".",
                "output": "."
              }
            ]
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "packages/ui-core/tsconfig.lib.json",
              "packages/ui-core/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!packages/ui-core/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "packages/ui-core/jest.config.js",
            "tsConfig": "packages/ui-core/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "ui-final-form": {
      "root": "packages/ui-final-form",
      "sourceRoot": "packages/ui-final-form/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/web:package",
          "options": {
            "outputPath": "dist/packages/ui-final-form",
            "tsConfig": "packages/ui-final-form/tsconfig.lib.json",
            "project": "packages/ui-final-form/package.json",
            "entryFile": "packages/ui-final-form/src/index.ts",
            "external": ["react", "react-dom", "react-is", "styled-components"],
            "babelConfig": "@nrwl/react/plugins/bundle-babel",
            "rollupConfig": "@nrwl/react/plugins/bundle-rollup",
            "assets": [
              {
                "glob": "README.md",
                "input": ".",
                "output": "."
              }
            ]
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "packages/ui-final-form/tsconfig.lib.json",
              "packages/ui-final-form/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!packages/ui-final-form/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "packages/ui-final-form/jest.config.js",
            "tsConfig": "packages/ui-final-form/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "reactgraphql.academy": {
      "root": "apps/reactgraphql.academy",
      "sourceRoot": "apps/reactgraphql.academy/src",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "deploy": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "dist/reactgraphql.academy",
            "parallel": false,
            "commands": [
              "cp ../../apps/reactgraphql.academy/firebase.json .",
              "npx firebase deploy --project=reactgraphqlacademy --only hosting --token=$FIREBASE_CI_TOKEN"
            ]
          }
        },
        "build": {
          "builder": "@nrwl/gatsby:build",
          "options": {
            "uglify": true,
            "color": true,
            "profile": false,
            "maxWorkers": 2,
            "memoryLimit": 3584
          },
          "configurations": {
            "production": {}
          }
        },
        "serve": {
          "builder": "@nrwl/gatsby:server",
          "options": {
            "buildTarget": "reactgraphql.academy:build",
            "port": 4201
          },
          "configurations": {
            "production": {
              "buildTarget": "reactgraphql.academy:build:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/reactgraphql.academy/tsconfig.json",
              "apps/reactgraphql.academy/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/reactgraphql.academy/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/reactgraphql.academy/jest.config.js",
            "tsConfig": "apps/reactgraphql.academy/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "reactgraphql.academy-e2e": {
      "root": "apps/reactgraphql.academy-e2e",
      "sourceRoot": "apps/reactgraphql.academy-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/reactgraphql.academy-e2e/cypress.json",
            "tsConfig": "apps/reactgraphql.academy-e2e/tsconfig.e2e.json",
            "devServerTarget": "reactgraphql.academy:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "reactgraphql.academy:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": ["apps/reactgraphql.academy-e2e/tsconfig.e2e.json"],
            "exclude": [
              "**/node_modules/**",
              "!apps/reactgraphql.academy-e2e/**/*"
            ]
          }
        }
      }
    },
    "api": {
      "root": "apps/api",
      "sourceRoot": "apps/api/src",
      "projectType": "application",
      "prefix": "api",
      "schematics": {},
      "architect": {
        "deploy": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "dist/apps/api",
            "parallel": false,
            "commands": [
              "echo \"deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main\" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list",
              "curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -",
              "sudo apt-get update && sudo apt-get install google-cloud-sdk",
              "echo \"$GCLOUD_SERVICE_KEY\"| base64 --decode > $HOME/google-key.json",
              "gcloud auth activate-service-account --key-file=\"$HOME/google-key.json\"",
              "gcloud --quiet config set project ${GOOGLE_PROJECT_ID}",
              "gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}",
              "cp ../../../package.json .",
              "cp ../../../yarn.lock .",
              "cp ../../../apps/api/Dockerfile .",
              "gcloud builds submit --tag gcr.io/leanjscom-web/leanjscom-web-api --timeout=1200s",
              "gcloud beta run deploy leanjscom-web-api --image gcr.io/leanjscom-web/leanjscom-web-api --platform managed --region europe-west1"
            ]
          }
        },
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/api",
            "main": "apps/api/src/main.ts",
            "tsConfig": "apps/api/tsconfig.app.json",
            "assets": ["apps/api/src/_REMOVE_WORKAROUND_ON_NX_10.1.1"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/api/src/environments/environment.ts",
                  "with": "apps/api/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "api:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/api/tsconfig.app.json",
              "apps/api/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/api/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/api/jest.config.js",
            "tsConfig": "apps/api/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "rga.studio": {
      "root": "apps/rga.studio",
      "sourceRoot": "apps/rga.studio/src",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "serve": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "apps/rga.studio",
            "parallel": false,
            "commands": ["npx sanity start ."]
          }
        },
        "test": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "apps/rga.studio",
            "parallel": false,
            "commands": ["npx sanity check $(pwd)"]
          }
        },
        "deploy": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "apps/rga.studio",
            "parallel": false,
            "commands": ["echo 'WIP: deploy to Firebase'"]
          }
        }
      }
    },
    "ui-twitter-embed": {
      "root": "packages/ui-twitter-embed",
      "sourceRoot": "packages/ui-twitter-embed/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "packages/ui-twitter-embed/tsconfig.lib.json",
              "packages/ui-twitter-embed/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!packages/ui-twitter-embed/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "packages/ui-twitter-embed/jest.config.js",
            "tsConfig": "packages/ui-twitter-embed/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "leanui-docz": {
      "root": "apps/leanui-docz",
      "sourceRoot": "apps/leanui-docz/src",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/gatsby:build",
          "options": {
            "uglify": true,
            "color": true,
            "profile": false
          },
          "configurations": {
            "production": {}
          }
        },
        "serve": {
          "builder": "@nrwl/gatsby:server",
          "options": {
            "buildTarget": "leanui-docz:build"
          },
          "configurations": {
            "production": {
              "buildTarget": "leanui-docz:build:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/leanui-docz/tsconfig.json",
              "apps/leanui-docz/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/leanui-docz/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/leanui-docz/jest.config.js",
            "tsConfig": "apps/leanui-docz/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "online.reactgraphql.academy": {
      "root": "apps/online.reactgraphql.academy",
      "sourceRoot": "apps/online.reactgraphql.academy/src",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "deploy": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "dist/online.reactgraphql.academy",
            "parallel": false,
            "commands": [
              "cp ../../apps/online.reactgraphql.academy/firebase.json .",
              "npx firebase deploy --project=online-reactgraphql-academy --only hosting --token=$FIREBASE_CI_TOKEN"
            ]
          }
        },
        "serve": {
          "builder": "@nrwl/gatsby:server",
          "options": {
            "buildTarget": "online.reactgraphql.academy:build",
            "port": 4202
          },
          "configurations": {
            "production": {
              "buildTarget": "online.reactgraphql.academy:build:production"
            }
          }
        },
        "build": {
          "builder": "@nrwl/gatsby:build",
          "options": {
            "uglify": true,
            "color": true,
            "profile": false,
            "maxWorkers": 2,
            "memoryLimit": 3584
          },
          "configurations": {
            "production": {}
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/online.reactgraphql.academy/tsconfig.json",
              "apps/online.reactgraphql.academy/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/online.reactgraphql.academy/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/online.reactgraphql.academy/jest.config.js",
            "tsConfig": "apps/online.reactgraphql.academy/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "online.reactgraphql.academy-e2e": {
      "root": "apps/online.reactgraphql.academy-e2e",
      "sourceRoot": "apps/online.reactgraphql.academy-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "parallel": false,
            "commands": ["echo DISABLED"]
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/online.reactgraphql.academy-e2e/tsconfig.e2e.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/online.reactgraphql.academy-e2e/**/*"
            ]
          }
        }
      }
    },
    "ui-hls": {
      "root": "packages/ui-hls",
      "sourceRoot": "packages/ui-hls/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "packages/ui-hls/tsconfig.lib.json",
              "packages/ui-hls/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!packages/ui-hls/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "packages/ui-hls/jest.config.js",
            "tsConfig": "packages/ui-hls/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "ui-page": {
      "root": "packages/ui-page",
      "sourceRoot": "packages/ui-page/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "packages/ui-page/tsconfig.lib.json",
              "packages/ui-page/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!packages/ui-page/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "packages/ui-page/jest.config.js",
            "tsConfig": "packages/ui-page/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "ui-gatsby-sanity": {
      "root": "packages/ui-gatsby-sanity",
      "sourceRoot": "packages/ui-gatsby-sanity/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "packages/ui-gatsby-sanity/tsconfig.lib.json",
              "packages/ui-gatsby-sanity/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!packages/ui-gatsby-sanity/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "packages/ui-gatsby-sanity/jest.config.js",
            "tsConfig": "packages/ui-gatsby-sanity/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "ui-icons": {
      "root": "packages/ui-icons",
      "sourceRoot": "packages/ui-icons/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/web:package",
          "options": {
            "outputPath": "dist/packages/ui-icons",
            "tsConfig": "packages/ui-icons/tsconfig.lib.json",
            "project": "packages/ui-icons/package.json",
            "entryFile": "packages/ui-icons/src/index.ts",
            "external": ["react", "react-dom", "react-is", "styled-components"],
            "babelConfig": "@nrwl/react/plugins/bundle-babel",
            "rollupConfig": "@nrwl/react/plugins/bundle-rollup",
            "assets": [
              {
                "glob": "README.md",
                "input": ".",
                "output": "."
              }
            ]
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "packages/ui-icons/tsconfig.lib.json",
              "packages/ui-icons/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!packages/ui-icons/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "packages/ui-icons/jest.config.js",
            "tsConfig": "packages/ui-icons/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "ui-link": {
      "root": "packages/ui-link",
      "sourceRoot": "packages/ui-link/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/web:package",
          "options": {
            "outputPath": "dist/packages/ui-link",
            "tsConfig": "packages/ui-link/tsconfig.lib.json",
            "project": "packages/ui-link/package.json",
            "entryFile": "packages/ui-link/src/index.ts",
            "external": ["react", "react-dom", "react-is", "styled-components"],
            "babelConfig": "@nrwl/react/plugins/bundle-babel",
            "rollupConfig": "@nrwl/react/plugins/bundle-rollup",
            "assets": [
              {
                "glob": "README.md",
                "input": ".",
                "output": "."
              }
            ]
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "packages/ui-link/tsconfig.lib.json",
              "packages/ui-link/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!packages/ui-link/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "packages/ui-link/jest.config.js",
            "tsConfig": "packages/ui-link/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "ui-academy": {
      "root": "packages/ui-academy",
      "sourceRoot": "packages/ui-academy/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/web:package",
          "options": {
            "outputPath": "dist/packages/ui-academy",
            "tsConfig": "packages/ui-academy/tsconfig.lib.json",
            "project": "packages/ui-academy/package.json",
            "entryFile": "packages/ui-academy/src/index.ts",
            "external": ["react", "react-dom", "react-is", "styled-components"],
            "babelConfig": "@nrwl/react/plugins/bundle-babel",
            "rollupConfig": "@nrwl/react/plugins/bundle-rollup",
            "assets": [
              {
                "glob": "README.md",
                "input": ".",
                "output": "."
              }
            ]
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "packages/ui-academy/tsconfig.lib.json",
              "packages/ui-academy/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!packages/ui-academy/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "packages/ui-academy/jest.config.js",
            "tsConfig": "packages/ui-academy/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "magic-link": {
      "root": "packages/magic-link",
      "sourceRoot": "packages/magic-link/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/web:package",
          "options": {
            "outputPath": "dist/packages/magic-link",
            "tsConfig": "packages/magic-link/tsconfig.lib.json",
            "project": "packages/magic-link/package.json",
            "entryFile": "packages/magic-link/src/index.ts",
            "external": ["react", "react-dom", "react-is", "styled-components"],
            "babelConfig": "@nrwl/react/plugins/bundle-babel",
            "rollupConfig": "@nrwl/react/plugins/bundle-rollup",
            "assets": [
              {
                "glob": "README.md",
                "input": ".",
                "output": "."
              }
            ]
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "packages/magic-link/tsconfig.lib.json",
              "packages/magic-link/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!packages/magic-link/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "packages/magic-link/jest.config.js",
            "tsConfig": "packages/magic-link/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "graphql-client": {
      "root": "packages/graphql-client",
      "sourceRoot": "packages/graphql-client/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "packages/graphql-client/tsconfig.lib.json",
              "packages/graphql-client/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!packages/graphql-client/**/*"]
          }
        },
        "build": {
          "builder": "@nrwl/web:package",
          "options": {
            "outputPath": "dist/packages/graphql-client",
            "tsConfig": "packages/graphql-client/tsconfig.lib.json",
            "project": "packages/graphql-client/package.json",
            "entryFile": "packages/graphql-client/src/index.ts",
            "external": ["react", "react-dom", "react-is", "styled-components"],
            "babelConfig": "@nrwl/react/plugins/bundle-babel",
            "rollupConfig": "@nrwl/react/plugins/bundle-rollup",
            "assets": [
              {
                "glob": "README.md",
                "input": ".",
                "output": "."
              }
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "packages/graphql-client/jest.config.js",
            "tsConfig": "packages/graphql-client/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "upmentoring": {
      "root": "apps/upmentoring",
      "sourceRoot": "apps/upmentoring/src",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "deploy": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "dist/apps/upmentoring",
            "parallel": false,
            "commands": [
              "cp ../../../apps/upmentoring/firebase.json .",
              "npx firebase deploy --project=upmentoring-backoffice --only hosting --token=$FIREBASE_CI_TOKEN"
            ]
          }
        },
        "build": {
          "builder": "@nrwl/web:build",
          "options": {
            "outputPath": "dist/apps/upmentoring",
            "index": "apps/upmentoring/src/index.html",
            "main": "apps/upmentoring/src/main.tsx",
            "polyfills": "apps/upmentoring/src/polyfills.ts",
            "tsConfig": "apps/upmentoring/tsconfig.app.json",
            "assets": [
              "apps/upmentoring/src/favicon.ico",
              "apps/upmentoring/src/assets"
            ],
            "styles": [],
            "scripts": [],
            "webpackConfig": "@nrwl/react/plugins/webpack",
            "maxWorkers": 2,
            "memoryLimit": 3584
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/upmentoring/src/environments/environment.ts",
                  "with": "apps/upmentoring/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "upmentoring:build",
            "port": 4203
          },
          "configurations": {
            "production": {
              "buildTarget": "upmentoring:build:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/upmentoring/tsconfig.app.json",
              "apps/upmentoring/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/upmentoring/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/upmentoring/jest.config.js",
            "tsConfig": "apps/upmentoring/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "upmentoring-e2e": {
      "root": "apps/upmentoring-e2e",
      "sourceRoot": "apps/upmentoring-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/upmentoring-e2e/cypress.json",
            "tsConfig": "apps/upmentoring-e2e/tsconfig.e2e.json",
            "devServerTarget": "upmentoring:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "upmentoring:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": ["apps/upmentoring-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/upmentoring-e2e/**/*"]
          }
        }
      }
    },
    "rformacion": {
      "root": "apps/rformacion",
      "sourceRoot": "apps/rformacion/src",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/gatsby:build",
          "options": {
            "outputPath": "apps/rformacion/public",
            "uglify": true,
            "color": true,
            "profile": false
          },
          "configurations": {
            "production": {}
          }
        },
        "serve": {
          "builder": "@nrwl/gatsby:server",
          "options": {
            "buildTarget": "rformacion:build"
          },
          "configurations": {
            "production": {
              "buildTarget": "rformacion:build:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/rformacion/tsconfig.json",
              "apps/rformacion/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/rformacion/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/rformacion/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    }
  },
  "cli": {
    "defaultCollection": "@nrwl/react"
  },
  "schematics": {
    "@nrwl/workspace": {
      "library": {
        "linter": "eslint"
      }
    },
    "@nrwl/cypress": {
      "cypress-project": {
        "linter": "eslint"
      }
    },
    "@nrwl/react": {
      "application": {
        "style": "styled-components",
        "linter": "eslint",
        "babel": true
      },
      "library": {
        "style": "styled-components",
        "linter": "eslint"
      },
      "storybook-configuration": {
        "linter": "eslint"
      },
      "component": {
        "style": "styled-components"
      }
    },
    "@nrwl/next": {
      "application": {
        "linter": "eslint"
      }
    },
    "@nrwl/web": {
      "application": {
        "linter": "eslint"
      }
    },
    "@nrwl/node": {
      "application": {
        "linter": "eslint"
      },
      "library": {
        "linter": "eslint"
      }
    },
    "@nrwl/nx-plugin": {
      "plugin": {
        "linter": "eslint"
      }
    },
    "@nrwl/nest": {
      "application": {
        "linter": "eslint"
      }
    },
    "@nrwl/express": {
      "application": {
        "linter": "eslint"
      },
      "library": {
        "linter": "eslint"
      }
    },
    "@nrwl/gatsby": {
      "application": {}
    }
  },
  "defaultProject": "reactgraphql.academy"
}
